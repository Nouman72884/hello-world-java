// String determineRepoName() {
//        return ${GIT_URL}.split("/")[0].last()
// }
def repo() {
        url="${GIT_URL}"
        reponame=url.split("/").last().replace(".git","")
        echo "${reponame}"

      }

def remote_url() {
    repositoryUrl = scm.userRemoteConfigs[0].url
    echo "${repositoryUrl}"
    shortCommit = sh(returnStdout: true, script: "git log -n 1 --pretty=format:'%h'").trim()
    echo "${shortCommit}"
}
pipeline {
    environment {
        gitUser = sh(script: "git log -1 --pretty=format:'%an'", , returnStdout: true).trim()
      } 
      
    agent any
    tools {
        maven 'maven'
        jdk 'jdk'
    }
    stages {
        // stage('Build') {
        //     steps {
        //         //sh 'mvn clean install -Dv=${BUILD_NUMBER} -Dartifactory.publish.artifacts=true -Dartifactory.publish.buildInfo=true'
        //         sh 'mvn clean package'
        //         //sh 'mvn -B -DskipTests clean package'
        //     }
        // }
        // stage('Test') {
        //     steps {
        //         sh 'mvn test'
        //     }
        //     post {
        //         always {
        //             junit 'target/surefire-reports/*.xml'
        //         }
        //     }
        // }
        // stage('gituser') {
        //     steps {
        //             sh 'echo "${gitUser}"'
        //             }
        // }
        stage('git repo') {  
            steps{
                remote_url()
            }
        }
        // stage('Deliver') {
        //     steps {
        //         script {
        //         sh "chmod a+x jenkins/scripts/deploy.sh"
        //         sh "echo 'chmod successful' "
        //         sh "./jenkins/scripts/deploy.sh"
        //     }
        // }
        // }
        // stage('Test Path') {
        //     steps {
        //         sh 'pwd'
        //         sh 'ls target/'
        //     }
        // }
        // stage ('build number') {
        //     steps {
        //         sh 'echo "build number + git commit"'
        //         sh 'echo "${BUILD_NUMBER}-${GIT_COMMIT}"'
        //     }
        // }
        // stage ('build name') {
        //     steps {
        //         buildName "${BUILD_NUMBER}"
        //         addHtmlBadge(html: "<a href='https://github.com/Nouman72884/${reponame}/commit/${GIT_COMMIT}' target='_blank'>${GIT_COMMIT}</a>")
        //         //addHtmlBadge(html: "<a href='$GIT_URL'>${GIT_COMMIT}</a>")
        //         //createSummary icon:'package.png', text: "<a href='www.google.com'>View google Site</a>"
        //         //buildDescription "<html> <body> <a href='https://www.google.com/'>Visit google.com!</a> </body> </html>"
        //         //buildDescription "${GIT_COMMIT}"
        //     }
        // }
    //     stage ('Publish Artifacts') {
    //     steps {
    //         rtUpload (
    //             buildName: JOB_NAME,
    //             buildNumber: BUILD_NUMBER,
    //             serverId: "jenkins-artifactory", // Obtain an Artifactory server instance, defined in Jenkins --> Manage:
    //             spec: """{
    //                         "files": [
    //                             {
    //                                 "pattern": "target/my-app-1.0-SNAPSHOT.jar",
    //                                 "target": "docker-maven/my-app-1.0-SNAPSHOT.${BUILD_NUMBER}.jar",
    //                                 "recursive": "true"
    //                             }
    //                         ]
    //                 }"""   
    //             )
    //     }
    //  } 
    //     stage ('upload Artifacts info') {
    //         steps {
    //         script{
    //     def server = Artifactory.server 'jenkins-artifactory'
    //     def uploadSpec = """{
    //     "files": [
    //         {
    //         "pattern": "target/*.zip",
    //         "target": "docker-maven/"
    //         }
    //     ]
    //     }"""
    //     server.upload(uploadSpec)
    //  } 
    //     }
    //     }
    //  stage ('Publish build info') {
    //         steps {
    //             rtPublishBuildInfo (
    //                 serverId: "jenkins-artifactory"
    //             )
    //         }
    //     }
    //  stage ('pull artifact') {
    //     steps{
    //         rtDownload (
    //         serverId: "jenkins-artifactory",
    //         spec: """{
    //             "files": [
    //                 {
    //                 "pattern": "docker-maven/my-app-1.0-SNAPSHOT.110.jar",
    //                 "target": "app/"
    //                 }
    //             ]
    //         }"""
    //     )
    //     }
    // }
    // stage ('copy file to remote server') {
    //         steps {
    //             sh 'scp -v -o StrictHostKeyChecking=no  -i /home/ec2-user/nouman_pk.pem app/* ubuntu@54.83.253.135:/home/ubuntu'
    //             sh 'scp -v -o StrictHostKeyChecking=no  -i /home/ec2-user/nouman_pk.pem jenkins/scripts/deliver.sh ubuntu@54.83.253.135:/home/ubuntu'
    //             sh 'ssh -i /home/ec2-user/nouman_pk.pem ubuntu@54.83.253.135 sudo chmod a+x deliver.sh'
    //             sh 'ssh -i /home/ec2-user/nouman_pk.pem ubuntu@54.83.253.135 sudo  ./deliver.sh'
    //         }
    //     }
    //  stage('transfer artifacts') {
    //                 steps {
    //                       sshPublisher(
    //                       publishers:
    //                       [sshPublisherDesc
    //                       (configName: 'ubuntu',
    //                        transfers: [sshTransfer(
    //                        excludes: '',
    //                        execCommand: 'cd /tmp/tmp/jenkins/scripts;sudo chmod a+x deliver.sh;sudo ./deliver.sh ',
    //                        execTimeout: 350000,
    //                        flatten: false,
    //                        makeEmptyDirs: true,
    //                        noDefaultExcludes: false,
    //                        patternSeparator: '[, ]+',
    //                        remoteDirectory: '/tmp',
    //                        remoteDirectorySDF: false,
    //                        removePrefix: '', sourceFiles: '**/*')],
    //                        usePromotionTimestamp: false,
    //                        useWorkspaceInPromotion: false,
    //                        verbose: true)])
    //                       }
    //           }
    //  stage ('slack notification') {
    //      steps {
    //          slackSend "Build waiting for approval - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
    //      }
    //  }
    //  stage('Approval') {
    //         steps {
    //             script {
    //                 slackSend channel: '#slack-alerts', 
    //                 message: "${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
    //                 mail (to: 'n72884@gmail.com',
    //                 subject: "Job '${env.JOB_BASE_NAME}' (${env.BUILD_NUMBER}) is waiting for input",
    //                 body: "Please go to console output of ${env.BUILD_URL} to approve or Reject.");
    //                 def deploymentDelay = input id: 'Deploy', message: 'Deploy to production?', submitter: 'nouman'
    //             }
    //         }
    //     }
    // stage ('Deploy To QA'){
    //     input
    //         {
    //             message "Do you want to proceed for production deployment?"
    //         } 
    //         steps {
    //                     sh 'echo "Deploy into Prod"'

    //                 }
    //             }
    // stage ('Trigger other pipeline') {
    //     steps {
    //         build job: 'java-hello-world-approved'
    //         }
    // }
  }
}